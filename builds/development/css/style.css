@import "http://fonts.googleapis.com/css?family=Patua+One|Inika";
@import "https://fonts.googleapis.com/css?family=Roboto+Slab|Bree+Serif|Merriweather";
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

html {
  font-size: 62.5%;
}

body {
  margin: 0;
  padding: 0;
  font-size: 1.8rem;
  font-family: "Merryweather", Helvetica, sans-seriff;
  color: #191970;
  background-color: #E3C691;
}

.container {
  width: 80%;
  margin: 0 auto;
}

h1 {
  color: #0076A3;
}

h2 {
  color: #6D73C2;
}

h3 {
  color: #548C27;
}

h4 {
  color: #D14348;
}

h5 {
  color: #F39856;
}

h6 {
  color: #FFBA00;
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Bree Serif", Helvetica, sans-serif;
  color: #0076A3, #6D73C2, #548C27, #D14348, #F39856, #FFBA00;
}

.btn-default, .btn-cool, .btn-hot {
  display: inline-block;
  padding: 6px 12px;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  border: none;
  border-radius: 4px;
  font-family: "Bree Serif", Helvetica, sans-serif;
  user-select: none;
  color: #EEE8D6;
}

.btn-default {
  background: #555555;
}

.btn-cool {
  background: #061739;
}

.btn-hot {
  background: red;
}

.gridbefore, .gridafter {
  content: '';
  display: table;
}
.grid:after {
  clear: both;
}
.grid .item {
  float: left;
  width: 32%;
}
.grid .item:nth-child(n) {
  margin-right: 2%;
  margin-bottom: 2%;
}
.grid .item:nth-child(3n) {
  margin-right: 0;
  margin-bottom: 0;
}
.grid img {
  display: block;
  border-radius: 20px;
  max-width: 100%;
}

.background {
  color: #EEE8D6;
  margin: 20px 0;
  width: 100%;
  display: table;
}
.background .container {
  display: table-cell;
  vertical-align: bottom;
  padding-bottom: 20px;
}
.background .container h1 {
  color: #FFD700;
  font-family: "Merryweather", Helvetica, sans-seriff;
  font-size: 5rem;
  line-height: 105%;
  margin-bottom: 0;
  padding: 0 10%;
}
.background .container p {
  padding: 0 10%;
  margin-top: 0;
}

.jumbotron {
  background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.6)), url("../images/water.jpg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  height: 600px;
  margin-top: 0;
}

.bridge {
  background: linear-gradient(to bottom, transparent, rgba(0, 0, 0, 0.6)), url("../images/bridge.jpg");
  background-repeat: no-repeat;
  background-position: center center;
  background-size: cover;
  height: 300px;
}

.media {
  margin: 0;
  padding: 0;
  list-style: none;
}
.media .item {
  padding-bottom: 10px;
  padding-top: 10px;
  padding-left: 10px;
  border-top: 1px dotted #123524;
}
.media .item:hover {
  background: #FFD700;
}
.media .item:last-of-type {
  border-bottom: 1px dotted #123524;
}
.media .itembefore, .media .itemafter {
  content: '';
  display: table;
}
.media .item:after {
  clear: both;
}
.media .head {
  margin: 0;
  padding: 0;
  color: #483621;
  font-size: 2rem;
}
#typography .media .head {
  color: red;
}
.media p {
  margin: 0;
  font-size: 1.5rem;
}
.media img {
  float: left;
  margin-right: 10px;
}
.media a {
  text-decoration: none;
  color: #191970;
}

.table {
  font-size: 1.5rem;
  text-align: left;
  width: 100%;
}
.table caption {
  font-size: 2.5rem;
  text-align: left;
  padding-bottom: 5px;
}
.table > thead > tr:hover,
.table > tbody > tr:hover,
.table > tfoot > tr:hover {
  background-color: #dfc5b2;
}
.table > thead > tr:nth-child(even),
.table > tbody > tr:nth-child(even),
.table > tfoot > tr:nth-child(even) {
  background-color: rgba(255, 215, 0, 0.2);
}
.table > thead > tr:nth-child(even):hover,
.table > tbody > tr:nth-child(even):hover,
.table > tfoot > tr:nth-child(even):hover {
  background-color: rgba(255, 215, 0, 0.5);
}
.table > thead > tr > th,
.table > thead > tr > td,
.table > tbody > tr > th,
.table > tbody > tr > td,
.table > tfoot > tr > th,
.table > tfoot > tr > td {
  padding: 10px;
  border-bottom: 1px dotted #2D4471;
}
.table > thead > tr {
  background-color: #97D5D9;
  color: #EEE8D6;
}
.table > thead > tr:hover {
  background-color: #d99b97;
}
.table > thead > tr > th {
  border-bottom: 0;
}

header nav {
  background-color: #17233a;
}
nav .branding {
  float: left;
  display: none;
}
@media (min-width: 1000px) {
  nav .branding {
    display: block;
  }
}
nav .branding h1 {
  font-size: 2.75rem;
  overflow: hidden;
  margin: 0;
  color: #FFD700;
}
nav ul {
  list-style: none;
  margin: 0;
  padding: 0;
}
nav ulbefore, nav ulafter {
  content: '';
  display: table;
}
nav ul:after {
  clear: both;
}
nav ul li {
  padding: 10px 5px;
}
@media (min-width: 760px) {
  nav ul li {
    float: right;
  }
}
nav ul li a {
  text-decoration: none;
  padding: 10px 5px;
  color: #EEE8D6;
}
nav ul li a:hover {
  color: #FFD700;
}
header nav ul li a:hover {
  background-color: #101828;
}
footer nav ul li a {
  color: white;
}
footer nav {
  margin-top: 20px;
  min-height: 200px;
  background-color: #17233a;
}
@media (min-width: 0) and (max-width: 500px) {
  footer nav {
    display: none;
  }
}



/*# sourceMappingURL=data:application/json;base64, */
